/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.CaseReporter;

import business.EcoSystem;
import business.Enterprise.Enterprise;

import business.Enterprise.CaseReporterEnterprise;
import business.Organization.CaseReporterOrganization;
import business.Organization.Organization;
import business.UserAccount.UserAccount;
import business.WorkQueue.CounsellorWorkRequest;
import business.WorkQueue.DrWorkRequest;
import business.WorkQueue.PsychiatristWorkRequest;
import business.WorkQueue.CaseReporterWorkRequest;
import business.WorkQueue.LawyerWorkRequest;
import java.awt.Color;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Dhaval
 */
public class CaseReporterViewStatusJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CaseReporterViewStatusJPanel
     */
    private JPanel userProcessContainer;
    private EcoSystem business;
    private UserAccount userAccount;
    private CaseReporterOrganization CROrganization; 
    private Organization organization;
    private CaseReporterEnterprise CREnterprise;
    
    public CaseReporterViewStatusJPanel(JPanel userProcessContainer, UserAccount account, Organization organization,Enterprise enterprise,EcoSystem business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = account;
        this.business = business;
        this.CROrganization = (CaseReporterOrganization)organization;
        this.CREnterprise = (CaseReporterEnterprise) enterprise;
        this.organization=organization;
        
       popTable();
       //populateCM();
       //populateCounsellor();
       popStatusTable();
       lblCaseVolunteer.setVisible(false);
       lblDate.setVisible(false);
       lblReceiver.setVisible(false);
       lblStatus.setVisible(false);
       lblCounsellor.setVisible(false);
       lblLawyer.setVisible(false);
       lblDoc.setVisible(false);
       lblPsych.setVisible(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableCases = new javax.swing.JTable();
        lblCaseVolunteer = new javax.swing.JLabel();
        lblDate = new javax.swing.JLabel();
        lblReceiver = new javax.swing.JLabel();
        lblStatus = new javax.swing.JLabel();
        txtCaseVolunteerDate = new javax.swing.JLabel();
        txtCaseVolunteer = new javax.swing.JLabel();
        txtCaseVolunteerStatus = new javax.swing.JLabel();
        lblCounsellor = new javax.swing.JLabel();
        txtDoctorDate = new javax.swing.JLabel();
        txtDoctor = new javax.swing.JLabel();
        txtDoctorStatus = new javax.swing.JLabel();
        lblLawyer = new javax.swing.JLabel();
        lblDoc = new javax.swing.JLabel();
        lblPsych = new javax.swing.JLabel();
        txtCounsellorDate = new javax.swing.JLabel();
        txtCOunsellor = new javax.swing.JLabel();
        txtCounsellorStatus = new javax.swing.JLabel();
        txtLawyerDate = new javax.swing.JLabel();
        txtLawyer = new javax.swing.JLabel();
        txtLawyerStatus = new javax.swing.JLabel();
        txtlPsychDate = new javax.swing.JLabel();
        txtPsych = new javax.swing.JLabel();
        txtPsychStatus = new javax.swing.JLabel();
        btnCheckStatus = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tableCases.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Index", "Date", "Receiver ", "Current Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableCases);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(21, 0, 598, 156));

        lblCaseVolunteer.setFont(new java.awt.Font("Monaco", 1, 14)); // NOI18N
        lblCaseVolunteer.setForeground(new java.awt.Color(51, 102, 255));
        lblCaseVolunteer.setText("Case Volunteer");
        jPanel2.add(lblCaseVolunteer, new org.netbeans.lib.awtextra.AbsoluteConstraints(103, 189, 125, -1));

        lblDate.setFont(new java.awt.Font("Monaco", 1, 14)); // NOI18N
        lblDate.setForeground(new java.awt.Color(230, 126, 34));
        lblDate.setText("Date:");
        jPanel2.add(lblDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(21, 217, -1, -1));

        lblReceiver.setFont(new java.awt.Font("Monaco", 1, 14)); // NOI18N
        lblReceiver.setForeground(new java.awt.Color(230, 126, 34));
        lblReceiver.setText("Reciever:");
        jPanel2.add(lblReceiver, new org.netbeans.lib.awtextra.AbsoluteConstraints(21, 270, -1, 32));

        lblStatus.setFont(new java.awt.Font("Monaco", 1, 14)); // NOI18N
        lblStatus.setForeground(new java.awt.Color(230, 126, 34));
        lblStatus.setText("Status:");
        jPanel2.add(lblStatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(21, 320, -1, 21));
        jPanel2.add(txtCaseVolunteerDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(103, 217, 125, 35));
        jPanel2.add(txtCaseVolunteer, new org.netbeans.lib.awtextra.AbsoluteConstraints(103, 270, 125, 32));
        jPanel2.add(txtCaseVolunteerStatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(103, 320, 125, 21));

        lblCounsellor.setFont(new java.awt.Font("Monaco", 1, 14)); // NOI18N
        lblCounsellor.setForeground(new java.awt.Color(51, 102, 255));
        lblCounsellor.setText("Counsellor");
        jPanel2.add(lblCounsellor, new org.netbeans.lib.awtextra.AbsoluteConstraints(378, 189, 103, -1));
        jPanel2.add(txtDoctorDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(326, 217, 34, 35));
        jPanel2.add(txtDoctor, new org.netbeans.lib.awtextra.AbsoluteConstraints(326, 270, 34, 32));
        jPanel2.add(txtDoctorStatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(326, 320, 34, 21));

        lblLawyer.setFont(new java.awt.Font("Monaco", 1, 14)); // NOI18N
        lblLawyer.setForeground(new java.awt.Color(51, 102, 255));
        lblLawyer.setText("Lawyer");
        jPanel2.add(lblLawyer, new org.netbeans.lib.awtextra.AbsoluteConstraints(518, 189, 101, -1));

        lblDoc.setFont(new java.awt.Font("Monaco", 1, 14)); // NOI18N
        lblDoc.setForeground(new java.awt.Color(51, 102, 255));
        lblDoc.setText("Doctor");
        jPanel2.add(lblDoc, new org.netbeans.lib.awtextra.AbsoluteConstraints(246, 189, 74, -1));

        lblPsych.setFont(new java.awt.Font("Monaco", 1, 14)); // NOI18N
        lblPsych.setForeground(new java.awt.Color(51, 102, 255));
        lblPsych.setText("Psychiatrist");
        jPanel2.add(lblPsych, new org.netbeans.lib.awtextra.AbsoluteConstraints(637, 189, 108, -1));
        jPanel2.add(txtCounsellorDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(378, 217, 120, 35));
        jPanel2.add(txtCOunsellor, new org.netbeans.lib.awtextra.AbsoluteConstraints(378, 270, 120, 32));
        jPanel2.add(txtCounsellorStatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(378, 320, 120, 21));
        jPanel2.add(txtLawyerDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(518, 217, 101, 35));
        jPanel2.add(txtLawyer, new org.netbeans.lib.awtextra.AbsoluteConstraints(516, 270, 103, 36));
        jPanel2.add(txtLawyerStatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(516, 320, 103, 21));
        jPanel2.add(txtlPsychDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(637, 217, 145, 35));
        jPanel2.add(txtPsych, new org.netbeans.lib.awtextra.AbsoluteConstraints(637, 270, 145, 36));
        jPanel2.add(txtPsychStatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(637, 320, 145, 21));

        btnCheckStatus.setBackground(new java.awt.Color(51, 102, 255));
        btnCheckStatus.setFont(new java.awt.Font("Monaco", 1, 14)); // NOI18N
        btnCheckStatus.setForeground(new java.awt.Color(255, 255, 255));
        btnCheckStatus.setText("Check Status");
        btnCheckStatus.setBorderPainted(false);
        btnCheckStatus.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnCheckStatusMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnCheckStatusMouseEntered(evt);
            }
        });
        btnCheckStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckStatusActionPerformed(evt);
            }
        });
        jPanel2.add(btnCheckStatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(685, 70, -1, -1));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 30, -1, -1));

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 900, 574));
    }// </editor-fold>//GEN-END:initComponents

    private void btnCheckStatusMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCheckStatusMouseEntered
        btnCheckStatus.setForeground(new Color(0,128,128));        // TODO add your handling code here:
    }//GEN-LAST:event_btnCheckStatusMouseEntered

    private void btnCheckStatusMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCheckStatusMouseExited
        btnCheckStatus.setForeground(Color.black);        // TODO add your handling code here:
    }//GEN-LAST:event_btnCheckStatusMouseExited

    private void btnCheckStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckStatusActionPerformed
        popStatusTable();

    }//GEN-LAST:event_btnCheckStatusActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCheckStatus;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCaseVolunteer;
    private javax.swing.JLabel lblCounsellor;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblDoc;
    private javax.swing.JLabel lblLawyer;
    private javax.swing.JLabel lblPsych;
    private javax.swing.JLabel lblReceiver;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JTable tableCases;
    private javax.swing.JLabel txtCOunsellor;
    private javax.swing.JLabel txtCaseVolunteer;
    private javax.swing.JLabel txtCaseVolunteerDate;
    private javax.swing.JLabel txtCaseVolunteerStatus;
    private javax.swing.JLabel txtCounsellorDate;
    private javax.swing.JLabel txtCounsellorStatus;
    private javax.swing.JLabel txtDoctor;
    private javax.swing.JLabel txtDoctorDate;
    private javax.swing.JLabel txtDoctorStatus;
    private javax.swing.JLabel txtLawyer;
    private javax.swing.JLabel txtLawyerDate;
    private javax.swing.JLabel txtLawyerStatus;
    private javax.swing.JLabel txtPsych;
    private javax.swing.JLabel txtPsychStatus;
    private javax.swing.JLabel txtlPsychDate;
    // End of variables declaration//GEN-END:variables

    private void popTable() {
        
        DefaultTableModel model= (DefaultTableModel) tableCases.getModel();
        Object[] row=new Object[4];
        model.setRowCount(0);
        int count = 1;
        for(CaseReporterWorkRequest request : userAccount.getWrkQue().getCaseReporterWorkRequestList())
         {
            request.setRequestid(count);
            row[0]=request.getRequestid();
            row[1] = request.getDoi();
            if (request.getReceiver()==null){
                row[2] = "Not Assigned";
            }else{
                row[2] = request.getReceiver().getEmp().getName();
            }
            row[3] = request;
            
           
            
            model.addRow(row);
            count++;
            txtCaseVolunteerDate.setText("");
            txtCaseVolunteer.setText("");
            txtCaseVolunteerStatus.setText("");
            
            
        }
        
        
    }
    
    
    private void popStatusTable() {
        int selectedRow = tableCases.getSelectedRow();
        
        if (selectedRow < 0){
            return;
        }
        if (selectedRow >= 0) {
            lblCaseVolunteer.setVisible(true);
            lblDate.setVisible(true);
            lblReceiver.setVisible(true);
            lblStatus.setVisible(true);
            lblCounsellor.setVisible(true);
            lblLawyer.setVisible(true);
            lblDoc.setVisible(true);
            lblPsych.setVisible(true);
            CaseReporterWorkRequest  CaseRepoWorkReq  = (CaseReporterWorkRequest) tableCases.getValueAt(selectedRow, 3);
                 if(CaseRepoWorkReq!=null){
                     txtCaseVolunteerDate.setText(CaseRepoWorkReq.getRequestDate().toString());
                     if(CaseRepoWorkReq.getReceiver()==null){
                         txtCaseVolunteer.setText("Not Assigned");
                     }else{
                         txtCaseVolunteer.setText(CaseRepoWorkReq.getReceiver().toString());
                     }
                     txtCaseVolunteerStatus.setText(CaseRepoWorkReq.getStatus());
                     
                        if(CaseRepoWorkReq.getDoctorWorkRequest()!=null){
                            DrWorkRequest D = CaseRepoWorkReq.getDoctorWorkRequest(); 
                            txtDoctorDate.setText(D.getRequestDate().toString());
                        if(D.getReceiver()==null){
                            txtDoctor.setText("Not Assigned");
                        }else{
                            txtDoctor.setText(D.getReceiver().toString());
                        }
                        txtDoctorStatus.setText(D.getStatus());
                        }else{
                            txtDoctorDate.setText("-");
                            txtDoctor.setText("-");
                            txtDoctorStatus.setText("-");
                        }
                        
                        if(CaseRepoWorkReq.getCounsellorWorkRequest()!=null){
                            CounsellorWorkRequest C = CaseRepoWorkReq.getCounsellorWorkRequest(); 
                            txtCounsellorDate.setText(C.getRequestDate().toString());
                        if(C.getReceiver()==null){
                            txtCOunsellor.setText("Not Assigned");
                        }else{
                            txtCOunsellor.setText(C.getReceiver().toString());
                        }
                        txtCounsellorStatus.setText(C.getStatus());
                        }else{
                            txtCounsellorDate.setText("-");
                            txtCOunsellor.setText("-");
                            txtCounsellorStatus.setText("-");
                        }
                        
                        if(CaseRepoWorkReq.getHpWorkRequest()!=null){
                            PsychiatristWorkRequest P = CaseRepoWorkReq.getHpWorkRequest(); 
                            txtlPsychDate.setText(P.getRequestDate().toString());
                        if(P.getReceiver()==null){
                            txtPsych.setText("Not Assigned");
                        }else{
                            txtPsych.setText(P.getReceiver().toString());
                        }
                        txtPsychStatus.setText(P.getStatus());
                        }else{
                            txtlPsychDate.setText("-");
                            txtPsych.setText("-");
                            txtPsychStatus.setText("-");
                        }
                        
                        if(CaseRepoWorkReq.getLawyerWorkRequest()!=null){
                            LawyerWorkRequest L = CaseRepoWorkReq.getLawyerWorkRequest(); 
                            txtLawyerDate.setText(L.getRequestDate().toString());
                        if(L.getReceiver()==null){
                            txtLawyer.setText("Not Assigned");
                        }else{
                            txtLawyer.setText(L.getReceiver().toString());
                        }
                        txtLawyerStatus.setText(L.getStatus());
                        }else{
                            txtLawyerDate.setText("-");
                            txtLawyer.setText("-");
                            txtLawyerStatus.setText("-");
                        }
                 }
                     
                 
             }
    }
    
    
}
